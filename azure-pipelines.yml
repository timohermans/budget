# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main
- blazor-testing

pool: Default

container:
  image: 'itsyou0o/playwright-with-docker:latest'
  mapDockerSocket: true

variables:
  solution: 'Budget.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  LANG: en_NL.UTF-8
  dockerImage: $(RegistryHost)/budget

steps:

- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: '8.0.x'
  displayName: 'Use .NET SDK'

- script: 'dotnet restore $(solution) --locked-mode'
  displayName: 'Restore'
  
- script: 'dotnet build $(solution) --no-restore'
  displayName: 'Build'

- script: 'mkdir ./Budget.BlazorTests/bin/Debug/net8.0/playwright-traces'
  displayName: 'Create directory for test traces'

- task: CmdLine@2
  displayName: 'Test'
  inputs:
    script: 'dotnet test $(solution) --no-restore --no-build'
  env:
    Url: $(TestUrl)
    User__Username: $(TestUser)
    User__Password: $(TestPassword)
    User__OtpSecret: $(TestOtpSecret)
    AzureAd__Instance: $(AzureAdInstance)
    AzureAd__TenantId: $(AzureAdTenantId)
    AzureAd__ClientId: $(AzureAdClientId)

- publish: ./Budget.BlazorTests/bin/Debug/net8.0/playwright-traces
  artifact: TestResult
  condition: failed()

- script: 'echo "$(RegistryPassword)" | docker login -u $(RegistryUsername) --password-stdin $(RegistryHost)'
  displayName: Docker Login

- script: 'docker build -t $(dockerImage) -t $(dockerImage):$(Build.SourceVersion) -t $(dockerImage):latest . --file Budget.App/Dockerfile '
  displayName: Docker Build

- script: 'docker push -a $(dockerImage)'
  displayName: Docker Push

- task: SSH@0
  displayName: 'Deploy'
  inputs:
    sshEndpoint: 'Home SSH'
    runOptions: 'commands'
    commands: '/etc/webhook/commands/budget-deploy.sh'
    failOnStdErr: true
    readyTimeout: '20000'





