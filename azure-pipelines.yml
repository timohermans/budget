# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool: Default

container:
  image: 'itsyou0o/playwright-with-docker:latest'
  mapDockerSocket: true

variables:
  solution: 'Budget.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  LANG: en_NL.UTF-8
  dockerAppImage: $(RegistryHost)/budget
  dockerApiImage: $(RegistryHost)/budget-api

steps:

- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: '8.0.x'
  displayName: 'Use .NET SDK'

  
- task: PowerShell@2
  displayName: 'Set api appsettings.json for test'
  inputs:
    targetType: 'inline'
    script: |
      # Define the path to your appsettings.json file
      $filePath = "./Budget.Api/appsettings.Production.json"
      
      # Create a hashtable with the desired key-value pairs
      $appSettings = @"
      {
          "Swagger": {
              "ClientId": "$($env:api_swagger_clientid)",
              "AuthorizeUrl": "$($env:api_swagger_authorizeurl)",
              "Scopes": "$($env:api_swagger_scopes)"
          },
          "AzureAd": 
              "TentantId": "$($env:api_azuread_tentantid)",
              "Scopes": "$($env:api_azuread_scopes)",
              "Instance": "$($env:api_azuread_instance)",
              "Domain": "$($env:api_azuread_domain)",
              "ClientId": "$($env:api_azuread_clientid)",
              "CallbackPath": "$($env:api_azuread_callbackpath)"
          }
      }
      "@
      
      # Write the JSON content to the appsettings.json file
      $appSettings | Set-Content -Path $filePath

- task: PowerShell@2
  displayName: Add app appsettings.json values for test
  inputs:
    targetType: 'inline'
    script: |
      # Define the path to your appsettings.json file
      $filePath = "./Budget.App/appsettings.Production.json"
      
      # Create a hashtable with the desired key-value pairs
      $appSettings = @"
      {
        "AzureAd": 
          "Instance": "$($env:app_azuread_instance)",
          "TentantId": "$($env:app_azuread_tentantid)",
          "ClientId": "$($env:app_azuread_clientid)",
          "ClientCredentials": [
            
              "SourceType": "ClientSecret",
              "ClientSecret": "$($env:app_azuread_clientsecret)"
            }
          ]
        },
        "Api": 
          "BaseUrl": "https://localhost:5078",
          "Scopes": "$($env:app_api_scopes)"
        }
      }
      "@
      Write-Host ${env:app_api_scopes}
      Write-Host ${env:app_azuread_tentantid}
      # Write the JSON content to the appsettings.json file
      $appSettings | Set-Content -Path $filePath


- publish: ./Budget.App/appsettings.Production.json
  artifact: Testresult

- publish: ./Budget.Api/appsettings.Production.json
  artifact: Testresult2





