@page
@using Budget.Core.Extensions
@using Budget.Core.UseCases
@using System.Globalization
@model Budget.Pages.Pages.Transactions.IndexModel

@{
    ViewData["Title"] = "2023-12";
    var dutch = new CultureInfo("nl-NL");
}

<nav class="navbar">
    <div class="container-fluid">
        <div class="navbar-brand">
            @{
                var previousMonth = Model.Date.AddMonths(-1);
            }
            <a class="btn" asp-page="/Transactions/Index" asp-route-year="@previousMonth.Year" asp-route-month="@previousMonth.Month">
                <i class="bi bi-arrow-left-circle fs-4"></i>
            </a>
            <a class="btn fs-4" asp-page="/Transactions/Index"> @Model.Date.ToString("yyyy-MM")</a>
            @{
                var nextMonth = Model.Date.AddMonths(1);
            }
            <a class="btn" asp-page="/Transactions/Index" asp-route-year="@nextMonth.Year" asp-route-month="@nextMonth.Month">
                <i class="bi bi-arrow-right-circle fs-4"></i>
            </a>
        </div>

        <div>
            Hello, @HttpContext.User.Identity?.Name (<form class="d-inline" method="post" asp-page="/Account/Logout"><button type="submit" class="btn btn-link p-0">Logout</button></form>)
        </div>
    </div>
</nav>

<main class="container flex-grow-1">
    @if (TempData.ContainsKey(UploadModel.TmpAmountInsertedKey))
    {
        var amountInserted = TempData[UploadModel.TmpAmountInsertedKey];
        var minDate = TempData[UploadModel.TmpAmountMinDateKey];
        var maxDate = TempData[UploadModel.TmpAmountMaxDateKey];

        <div class="alert alert-success" role="alert">
            Er zijn <b>@amountInserted</b> transacties toegevoegd met data tussen @minDate en @maxDate!
        </div>
    }

    <div class="row mb-3">
        <div class="col-auto align-self-center">
            <a class="btn btn-primary fs-4" asp-page="/Transactions/Upload">
                <i class="bi bi-cloud-arrow-up"></i>
            </a>
        </div>
        <form x-data="{}" method="get" class="col">
            <input type="hidden" name="year" value="@Model.Date.Year" />
            <input type="hidden" name="month" value="@Model.Date.Month" />
            <div class="form-floating">
                <select name="iban" asp-items="Model.Ibans" class="form-select" x-on:change="$event.target.form.submit()">
                </select>
                <label asp-for="Iban"></label>
            </div>
        </form>
    </div>

    <section class="row justify-content-center">
        <h2>Budget</h2>
        <div class="col-xs-8 col-sm-6 col-md-5 col-lg-4">
            <ul class="vstack gap-1">
                <li class="row">
                    <div class="col fst-italic text-capitalize">@Model.DatePreviousMonth.ToString("MMMM", dutch)</div>
                </li>
                <li class="row">
                    <div class="col">Inkomen</div>
                    <div class="col-auto">@Model.IncomeLastMonth</div>
                    <div class="col-1"></div>
                </li>
                <li class="row border-bottom">
                    <div class="col">Lasten</div>
                    <div class="col-auto">@(Model.ExpensesFixedLastMonth * -1)</div>
                    <div class="col-1">-</div>
                </li>
                <li class="row mb-3">
                    <div class="col">Budget</div>
                    <div class="col-auto">@(Model.BudgetAvailable)</div>
                    <div class="col-1"></div>
                </li>
                <li class="row">
                    <div class="col fst-italic text-capitalize">@Model.Date.ToString("MMMM", dutch)</div>
                </li>
                <li class="row border-bottom">
                    <div class="col">Weken</div>
                    <div class="col-auto">@Model.WeeksInMonth.Count</div>
                    <div class="col-1">÷</div>
                </li>
                <li class="row">
                    <div class="col">Budget per week</div>
                    <div class="col-auto">
                        <span class="badge text-bg-info"> @(Model.BudgetPerWeek)</span>
                    </div>
                    <div class="col-1"></div>
                </li>
            </ul>
        </div>
        <div class="col-xs-8 col-sm-6 col-md-5 col-lg-4">
            <ul class="vstack gap-1">
                <li class="row">
                    <div class="col fst-italic text-capitalize">@Model.Date.ToString("MMMM", dutch)</div>
                </li>
                <li class="row">
                    <div class="col">Budget</div>
                    <div class="col-auto">@Model.BudgetAvailable</div>
                    <div class="col-1"></div>
                </li>
                @foreach (var (week, index) in Model.WeeksInMonth.Select((w, i) => (w, i)))
                {
                    var isLast = index == Model.WeeksInMonth.Count - 1;
                    var expenseOfWeek = Model.ExpensesPerWeek.GetValueOrDefault(week, 0);

                    <li class="row @(isLast ? "border-bottom pb-1": "")">
                        <div class="col">Week <a href="#week@(week)">@week</a> @(DateTime.Now.ToIsoWeekNumber() == week ? "👈" : "")</div>
                        <div class="col-auto">
                            <span class="badge @(expenseOfWeek == 0 ? "text-bg-light" : (expenseOfWeek * -1) > Model.BudgetPerWeek ? "text-bg-danger" : "text-bg-success")">
                                @expenseOfWeek
                            </span>
                        </div>
                        <div class="col-1">
                            @if (isLast)
                            {
                                <span>+</span>
                            }
                        </div>
                    </li>
                }
                <li class="row">
                    <div class="col">Over</div>
                    <div class="col-auto">@(Model.BudgetAvailable + Model.ExpensesVariable)</div>
                    <div class="col-1"></div>
                </li>
                <li class="row">
                    <div class="col">Van eigen rekening</div>
                    <div class="col-auto">
                        <span class="badge text-bg-@(Model.IncomeFromOwnAccounts == 0 ? "light" : "danger")">@(Model.IncomeFromOwnAccounts)</span>
                    </div>
                    <div class="col-1"></div>
                </li>
            </ul>
        </div>
    </section>

    <section class="table-responsive text-nowrap">
        <h2>Transacties</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Datum</th>
                    <th>Naam</th>
                    <th>Bedrag</th>
                    <th>Is vast</th>
                    <th>Omschrijving</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var weekKvp in Model.TransactionsPerWeek)
                {
                    <tr id="week@(weekKvp.Key)">
                        <td class="fw-bold fst-italic" colspan="5">Week @weekKvp.Key</td>
                    </tr>

                    @foreach (var transaction in weekKvp.Value)
                    {
                        <tr>
                            <td>@transaction.DateTransaction.ToShortDateString()</td>
                            <td>@transaction.NameOtherParty</td>
                            <td class="text-center">
                                <span class="badge text-bg-@(transaction.Amount < 0 ? "danger" : "success")">
                                    @transaction.Amount
                                </span>
                            </td>
                            <td>@(string.IsNullOrWhiteSpace(transaction.AuthorizationCode) ? "" : "🔒")</td>
                            <td>@transaction.Description</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </section>
</main>