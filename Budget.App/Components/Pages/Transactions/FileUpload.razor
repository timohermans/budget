@page "/transactions/upload"
@using System.ComponentModel.DataAnnotations
@using Budget.App.Services
@inject NavigationManager Navigator

<main class="container">
    <h2>Nieuwe transacties</h2>

    <EditForm method="post" enctype="multipart/form-data" Model="@Model" OnSubmit="@OnPost" FormName="fileUpload">
        <div class="mb-3">
            <label class="form-label">Rabobank CSV bestand</label>
            <InputFile name="Model.Files" class="form-control" />
            @if (_errors != null)
            {
                <div class="invalid-feedback d-block">@_errors</div>
            }
        </div>
        <div>
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-floppy"></i>
                <span>Opslaan</span>
            </button>
        </div>
    </EditForm>
</main>

@code {
    [SupplyParameterFromForm]
    public UploadModel? Model { get; set; }

    [Inject] public ApiClientProvider ApiProvider { get; set; } = default!;

    private string? _errors;

    protected override void OnInitialized() => Model ??= new();

    public async Task OnPost()
    {
        var api = await ApiProvider.ProvideAsync();
        if (api is null) return;
        if (Model!.Files!.Count == 0)
        {
            _errors = "Een bestand is wel nodig... 😅";
            return;
        }

        await using var fileStream = Model!.Files[0].OpenReadStream();
        await api.Transaction_UploadTransactionsAsync(new FileParameter(fileStream));

        Navigator.NavigateTo("/transactions");
    }

    public class UploadModel
    {
        [SupplyParameterFromForm]
        public IFormFileCollection? Files { get; set; }
    }
}
