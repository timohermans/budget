# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI and CD

on: push

permissions:
  contents: write
  
env:
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  build:
    runs-on: self-hosted
    env:
      Project: ./Budget.App
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Install Versionize
        run: dotnet tool install --global Versionize
      - name: Set Git config
        run: git config --global user.name "${{ secrets.GIT_NAME }}" && git config --global user.email ${{ secrets.GIT_EMAIL}}
      - name: Bump version
        run: export PATH="$PATH:~/.dotnet/tools" && git checkout ${{ github.ref_name }} && git reset origin/${{ github.ref_name}} --hard && cd $Project && versionize --commit-suffix "[skip ci]" && git push --follow-tags origin ${{github.ref_name}}
  
  
  unit-test:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Test
        run: cd Budget.Tests && dotnet test --verbosity normal
        
  integration-test:
    runs-on: self-hosted
    if: false
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Test
        run: cd Budget.IntegrationTests && dotnet test --verbosity normal
        
  deploy:
    runs-on: ubuntu-latest
    needs: [unit-test]
    if: ${{ github.ref == 'refs/heads/main' &&  success() }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - name: Build the Docker image
        run: docker build . --file Budget.App/Dockerfile --tag ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget
      - name: Tag Image Commit sha
        run: docker tag ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget:${{github.sha}}
      - name: Tag Image Latest
        run: docker tag ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget:latest
      - name: Login To Registry
        run: echo "${{secrets.HOME_BUDGET_REGISTRY_PASSWORD}}" | docker login -u ${{secrets.HOME_BUDGET_REGISTRY_USERNAME}} --password-stdin ${{secrets.HOME_BUDGET_REGISTRY_HOST}}
      - name: Push To Registry
        run: docker push -a ${{secrets.HOME_BUDGET_REGISTRY_HOST}}/budget

      - name: Update deployment repo
        run: cd ${{secrets.HOME_DIR}} && git fetch --all && git checkout --force "origin/master"

      - name: Deploy
        run: docker compose pull && docker compose up -d
