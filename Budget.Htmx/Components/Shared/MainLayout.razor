@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Components.Forms
@inherits LayoutComponentBase
@inject AntiforgeryStateProvider Antiforgery

<!DOCTYPE html>
<html lang="en" data-bs-theme="light">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="icon" href="images/money-up-favicon.png">
    <link rel="stylesheet" href="lib/bootstrap/bootstrap@5.3.2.min.css"/>
    <link rel="stylesheet" href="lib/bootstrap-icons/bootstrap-icons@1.11.3.min.css">
    <link rel="stylesheet" href="app.css"/>
    <link rel="stylesheet" href="Budget.Htmx.styles.css"/>

    <HeadOutlet/>

    <script defer src="lib/bootstrap/bootstrap@5.3.2.bundle.min.js"></script>
    <script defer src="lib/alpinejs/alpinejs@3.13.10.min.js"></script>
    <script defer src="lib/htmx/htmx@1.9.12.min.js"></script>
    <script defer src="js/site.js"></script>
    <script defer>
        document.addEventListener('htmx:configRequest', function(evt) {
            const name = "@_csrfName";
            const value = "@_csrfToken";
            evt.detail.parameters[name] = value; // add a new parameter into the mix
        });
    </script>
</head>

<body class="vh-100 d-flex flex-column">
@Body
</body>

</html>

@code {
    private string? _csrfToken;
    private string? _csrfName;

    protected override void OnInitialized()
    {
        var token = Antiforgery.GetAntiforgeryToken();
        _csrfToken = token?.Value;
        _csrfName = token?.FormFieldName;
    }

}